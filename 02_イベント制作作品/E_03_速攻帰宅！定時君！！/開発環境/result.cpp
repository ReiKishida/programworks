//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
//
// リザルト処理 [result.cpp]
// Author : 圷 和也
//
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
#include "main.h"
#include "result.h"
#include "input.h"
#include "camera.h"
#include "light.h"
#include "fade.h"
#include "icon.h"
#include "time.h"
#include "ranking.h"
#include "bg.h"
#include "gamepad.h"
//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**
// マクロ定義
//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**

//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**
// 構造体定義
//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**

//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**
// グローバル変数
//*-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**-**
int g_nResultCounter;
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
// リザルト初期化処理
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
void InitResult(void)
{
	g_nResultCounter = 0;
	// 各種初期化処理
	// カメラの初期化処理
	InitCamera();
	// ライトの初期化処理
	InitLight();

	// タイム
	InitTime();
	// アイコンの初期化
	InitIcon();

	InitBG();

	SetIcon(D3DXVECTOR3(900.0f, 300.0f, 0.0f), ICON_TEX_GOGOME_TIME, 400.0f, 120.0f);

	SetBg(D3DXVECTOR3(SCREEN_WIDTH / 2.0f, SCREEN_HEIGHT / 2.0f, 0.0f), 0.0f, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), SCREEN_WIDTH, SCREEN_HEIGHT, BG_TEX_RANKING, BG_TYPE_NORMAL);

}

//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
// リザルト終了処理
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
void UninitResult(void)
{
	// ランキングソートするよぉ〜〜
	SortRanking(GetTime());

	// 各種終了処理
	// カメラの終了処理
	UninitCamera();
	// ライトの終了処理
	UninitLight();

	// アイコンの終了処理
	UninitIcon();
	// タイム
	UninitTime();

	UninitBG();
}

//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
// リザルト更新処理
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
void UpdateResult(void)
{
	g_nResultCounter++;
	FADE pFade;
	// フェードモードの取得
	pFade = GetFade();
	if (pFade == FADE_NONE)
	{

		// 決定キーが押されたかどうか
		if (GetKeyboardTrigger(DIK_RETURN) == true || GetGamePadTrigger(0, BUTTON_B))
		{
			// フェード設定
			SetFade(MODE_RANKING);
		}

	}

	// 各種更新処理
	// カメラの更新処理
	UpdateCamera();
	// ライトの更新処理
	UpdateLight();

	// アイコンの更新処理
	UpdateIcon();
	// タイム
	UpdateTime();

	UpdateBG();
}

//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
// リザルト描画処理
//=+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==+==
void DrawResult(void)
{
	// 各種描画処理
	// カメラの設定
	SetCamera(0);

	DrawBG();

	// アイコンの描画処理
	DrawIcon();
	// タイム
	DrawTime();


}

